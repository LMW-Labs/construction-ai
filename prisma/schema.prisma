generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  role      String   @default("USER")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  posts            Post[]
  ownedProjects    Project[]         @relation("ProjectOwner")
  projectMembers   ProjectMember[]
  taskAssignments  TaskAssignment[]
  equipmentOps     Equipment[]       @relation("EquipmentOperator")
  safetyReports    SafetyReport[]
}

model Post {
  id        String   @id @default(cuid())
  title     String
  content   String?
  published Boolean  @default(false)
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  author    User     @relation(fields: [authorId], references: [id])
}

model Project {
  id          String   @id @default(cuid())
  name        String
  description String?
  status      String   @default("PLANNING")
  startDate   DateTime?
  endDate     DateTime?
  budget      Float?
  actualCost  Float    @default(0)
  address     String?
  ownerId     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  owner         User              @relation("ProjectOwner", fields: [ownerId], references: [id])
  members       ProjectMember[]
  tasks         Task[]
  equipment     Equipment[]
  costEstimates CostEstimate[]
  safetyReports SafetyReport[]
}

model ProjectMember {
  id        String   @id @default(cuid())
  role      String   @default("MEMBER")
  joinedAt  DateTime @default(now())
  projectId String
  userId    String
  
  project   Project  @relation(fields: [projectId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  
  @@unique([projectId, userId])
}

model Task {
  id              String    @id @default(cuid())
  title           String
  description     String?
  status          String    @default("TODO")
  priority        String    @default("MEDIUM")
  startDate       DateTime?
  dueDate         DateTime?
  estimatedHours  Float?
  actualHours     Float?
  completedAt     DateTime?
  projectId       String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  
  project     Project          @relation(fields: [projectId], references: [id])
  assignments TaskAssignment[]
}

model TaskAssignment {
  id     String @id @default(cuid())
  taskId String
  userId String
  
  task   Task   @relation(fields: [taskId], references: [id])
  user   User   @relation(fields: [userId], references: [id])
  
  @@unique([taskId, userId])
}

model Equipment {
  id                 String    @id @default(cuid())
  name               String
  type               String
  model              String?
  serialNumber       String?
  status             String    @default("AVAILABLE")
  purchaseDate       DateTime?
  purchasePrice      Float?
  hourlyRate         Float?
  dailyRate          Float?
  lastMaintenance    DateTime?
  nextMaintenance    DateTime?
  location           String?
  notes              String?
  projectId          String?
  operatorId         String?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  
  project           Project?          @relation(fields: [projectId], references: [id])
  operator          User?             @relation("EquipmentOperator", fields: [operatorId], references: [id])
  maintenanceRecords MaintenanceRecord[]
}

model MaintenanceRecord {
  id          String    @id @default(cuid())
  type        String
  description String
  cost        Float?
  performedAt DateTime
  performedBy String?
  nextDue     DateTime?
  equipmentId String
  
  equipment   Equipment @relation(fields: [equipmentId], references: [id])
}

model CostEstimate {
  id            String   @id @default(cuid())
  name          String
  totalCost     Float
  laborCost     Float?
  materialCost  Float?
  equipmentCost Float?
  overheadCost  Float?
  profitMargin  Float?
  status        String   @default("DRAFT")
  validUntil    DateTime?
  projectId     String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  project     Project               @relation(fields: [projectId], references: [id])
  lineItems   CostEstimateLineItem[]
}

model CostEstimateLineItem {
  id          String  @id @default(cuid())
  description String
  quantity    Float
  unit        String
  unitPrice   Float
  totalPrice  Float
  category    String
  estimateId  String
  
  estimate    CostEstimate @relation(fields: [estimateId], references: [id])
}

model SafetyReport {
  id          String    @id @default(cuid())
  title       String
  description String
  severity    String
  status      String    @default("OPEN")
  location    String?
  photos      String?
  resolution  String?
  resolvedAt  DateTime?
  projectId   String
  reporterId  String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  project     Project @relation(fields: [projectId], references: [id])
  reporter    User    @relation(fields: [reporterId], references: [id])
}